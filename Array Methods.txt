let num = [1, 3, 6, 24, 4];
let b = num.toString();   // convert array into string
console.log(b);

let c = num.join("_");
console.log(c , typeof c);

// num.pop();     // pop last element from array
// let r = num.pop();   // return the popped element
// console.log(num , r);

// let k = num.push(88)  // returns new array length
// console.log(num, k);

// let a = num.shift();  // remove and returns first element of array
// console.log(a , num);

let m = num.unshift(53);  // add element at the begining of array and return length
console.log(m , num);



let number = [1, 2, 3, 4, 5, 6, 7, 8, 9];
delete number[0];
console.log(number);
console.log(number.length);  // length remain same

// concat method
let m1 = [1,2,3];
let m2 = [4,5,6];
let m3 = [7,8,9];

console.log(m1.concat(m2, m3));  // concat method doesn't change original array

// sort method
let compare = (a, b)=>{
  // return a-b;  // ascending order
  return b-a;  // descending order
}
let numberz = [1, 2, 13, 4, 65, 62, 7, 18, 29];
// numberz.sort();
numberz.sort(compare);

// numberz.reverse();   // reverse array
console.log(numberz);

// splice and slice method
let numbers = [1, 2, 13, 4, 65, 62, 7, 18, 29];
numbers.splice(2, 3, 1021, 1022, 1023, 1024, 1025);
// let deleted_values = numbers.splice(2, 3, 1021, 1022, 1023, 1024, 1025);
console.log(numbers);
// console.log(deleted_values, typeof deleted_values);


let m = [1, 2, 13, 4, 65, 62, 7, 18, 29];
// let am = m.slice(3);
let am = m.slice(3, 5);
console.log(am);



let arr = [45, 32, 47];

// Array map method

// let a = arr.map((value,) => {
// let a = arr.map((value, index) => {
let a = arr.map((value, index,  array) => {
  console.log(value, index, array);
  return value + 1;
})
console.log(a);
// console.log(arr);


// Array filter method

let arr2 = [31, 42, 67, 0, 3, 9];
let a2 = arr2.filter((value) => {
  return value < 10;
})
console.log(a2);
// console.log(arr2);


// Array reduce method
let arr3 = [1, 2, 3, 5, 3, 2, 1]
let a3 = arr3.reduce((val1, val2) => {
  return val1 + val2;
})
console.log(a3);

// can also do in this way 
// let func = (h1, h2) => {
//   return h1+h2;
// }
// let m = arr3.reduce(func);
// console.log(m);